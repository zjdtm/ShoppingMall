{"version":3,"file":"static/js/875.2ea24e1c.chunk.js","mappings":"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","sources":["components/common/Button.jsx","components/common/Responsive.jsx","components/common/Header.jsx","containers/common/HeaderContainer.jsx","lib/styles/palette.jsx","components/write/Editor.jsx","containers/write/EditorContainer.jsx","components/write/TagBox.jsx","containers/write/TagBoxContainer.jsx","components/write/WriteActionButtons.jsx","containers/write/WriteActionButtonsContainer.jsx","pages/PostWrite.jsx","responsive.js"],"sourcesContent":["import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport palette from \"../../lib/styles/palette\";\r\n\r\nconst buttonStyle = css`\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  padding: 0.25rem 1rem;\r\n  color: white;\r\n  outline: none;\r\n  cursor: pointer;\r\n\r\n  background: ${palette.gray[8]};\r\n  &:hover {\r\n    background: ${palette.gray[6]};\r\n  }\r\n  ${(props) => props.fullWidth &&\r\n    css`\r\n      padding-top: 0.75rem;\r\n      padding-bottom: 0.75rem;\r\n      width: 100%;\r\n      font-size: 1.125rem;\r\n    `}\r\n  ${(props) =>\r\n    props.cyan &&\r\n    css`\r\n      background: ${palette.gray[5]};\r\n      &:hover {\r\n        background: ${palette.gray[4]};\r\n      }\r\n    `}\r\n    &:disabled {\r\n    background: ${palette.gray[3]};\r\n    color: ${palette.gray[5]};\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\nconst StyledButton = styled.button`\r\n  ${buttonStyle}\r\n`;\r\nconst StyledLink = styled(Link)`\r\n  ${buttonStyle}\r\n`;\r\nconst Button = (props) => {\r\n  return props.to ? (\r\n    <StyledLink {...props} cyan={props.cyan ? 1 : 0} />\r\n  ) : (\r\n    <StyledButton {...props} />\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ResponsiveBlock = styled.div`\r\npadding-left: 1rem;\r\npadding-right:1rem;\r\nwidth:1024px;\r\nmargin:0 auto; /*중앙 정렬*/\r\n\r\n/*브라우저 크기에 따라 가로 크기 변경*/\r\n@media (max-width:1024px) {\r\n    width:768px;\r\n}\r\n@media (max-width:768px) {\r\n    width:100%;\r\n}\r\n`;\r\n\r\nconst Responsive = ({ children, ...rest }) => {\r\n    // style, className, onClick, onMouseMove 등의 props를 사용할 수 있도록\r\n  // …rest를 사용하여 ResponsiveBlock에게 전달\r\n  return <ResponsiveBlock {...rest}>{children}</ResponsiveBlock>;\r\n};\r\n\r\nexport default Responsive;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Responsive from \"./Responsive\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Badge,TextField} from \"@material-ui/core\";\r\nimport { ShoppingCartOutlined, SearchOutlined, Input} from \"@material-ui/icons\";\r\nimport { mobile } from \"../../responsive\";\r\nimport { GiConverseShoe } from \"react-icons/gi\"\r\n\r\nconst Container = styled.div`\r\n  margin-top: 20px;\r\n  position: fixed;\r\n  z-index: 9;\r\n  width: 100%;\r\n  height: 8%;\r\n  background-color: white;\r\n  ${mobile({flexwidth : \"100%\", height: \"10%\" })}\r\n`;\r\n\r\n/**Responsive 컴포넌트의 속성에 스타일을 추가해서 새로운 컴포넌트 생성 */\r\nconst Wrapper = styled(Responsive)`\r\n  width: 90%;\r\n  padding: 10px 20px;\r\n  height: 4rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between; /*자식 엘리먼트 사이에 여백을 최대로 설정*/\r\n  .logo {\r\n    margin-right: 200px;\r\n    font-size: 1.5rem;\r\n    font-weight: 900;\r\n    letter-spacing: 2px;\r\n  }\r\n  .right {\r\n    font-size: 14px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  ${mobile({ width : \"100%\", padding: \"10px 0px\" })}\r\n`;\r\n\r\nconst Search = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  ${mobile({ flex:3, width : \"30%\"})}\r\n`;\r\n\r\nconst LinkStyle = styled(Link)`\r\n    margin: 10px;\r\n    color : black;\r\n    ${mobile({ fontSize : \"8px\" })}\r\n`;\r\n\r\n\r\nconst MenuItem = styled.div`\r\n  cursor: pointer;\r\n  ${mobile({ fontSize: \"12px\", marginLeft: \"10px\" })}\r\n`;\r\n\r\n/**\r\n * 헤더가 fixed로 되어 있기 때문에 페이지의 콘텐츠가 4rem 아래에 나타나도록 해 주는 컴포넌트\r\n */\r\nconst Spacer = styled.div`\r\n  height: 4rem;\r\n`;\r\n\r\nconst Header = ({ user, onLogout, onChange, query}) => {\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Wrapper>\r\n          <Search>\r\n            <SearchOutlined style={{fontSize:\"40px\"}}/>\r\n              <TextField style={{width : '250px', height:'30px'}} size=\"small\" variant=\"outlined\" placeholder=\"상품검색\"\r\n                onChange={onChange} value={query || ''}/>\r\n          </Search>\r\n          <LinkStyle to=\"/\" className=\"logo\">\r\n            <i>SHOES SHOP</i>\r\n          </LinkStyle>\r\n          {user ? (\r\n            <div className=\"right\">\r\n              <LinkStyle to=\"/products\"><GiConverseShoe size=\"25\"/></LinkStyle>\r\n              {user._id === '630a5bfd79ccbbb4d0844649' ? <LinkStyle to=\"/product/register\"><Input/></LinkStyle> : ''}\r\n              {/* <LinkStyle to=\"/\"><Person/></LinkStyle> */}\r\n              {/* <LinkStyle to=\"/\" onClick={onLogout}>로그아웃</LinkStyle> */}\r\n              <MenuItem>\r\n                <Link to=\"/cart\">\r\n                  <Badge overlap=\"rectangular\" badgeContent={0} color=\"primary\">\r\n                    <ShoppingCartOutlined />\r\n                  </Badge>\r\n                </Link>\r\n              </MenuItem>\r\n            </div>\r\n          ) : (\r\n            <div className=\"right\">\r\n              <LinkStyle to=\"/products\"><GiConverseShoe size=\"25\"/></LinkStyle>\r\n              <MenuItem>\r\n                <LinkStyle onClick={() => alert(\"로그인 한 유저만 사용가능합니다.\")} to=\"/login\">\r\n                  <Badge overlap=\"rectangular\" badgeContent={0} color=\"primary\">\r\n                    <ShoppingCartOutlined />\r\n                  </Badge>\r\n                </LinkStyle>\r\n              </MenuItem>\r\n            </div>\r\n          )}\r\n        </Wrapper>\r\n      </Container>\r\n      <Spacer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"../../../node_modules/react-router-dom/index\";\r\nimport Header from \"../../components/common/Header\";\r\nimport { FilterlistProducts } from \"../../modules/products\";\r\nimport { logout } from \"../../modules/user\";\r\n\r\nconst HeaderContainer = () => {\r\n  const navigate = useNavigate();\r\n  const { user, cart, query } = useSelector(({ user, cart, products }) => ({\r\n    user: user.user,\r\n    cart: cart.cart,\r\n    query: products.query,\r\n  }));\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onLogout = async () => {\r\n    dispatch(logout());\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    dispatch(FilterlistProducts(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <Header\r\n      user={user}\r\n      cart={cart}\r\n      onLogout={onLogout}\r\n      onChange={onChange}\r\n      query={query}\r\n    />\r\n  );\r\n};\r\n\r\nexport default HeaderContainer;\r\n","// source: https://yeun.github.io/open-color/\r\n\r\nconst palette = {\r\n    gray: [\r\n      '#f8f9fa',\r\n      '#f1f3f5',\r\n      '#e9ecef',\r\n      '#dee2e6',\r\n      '#ced4da',\r\n      '#adb5bd',\r\n      '#868e96',\r\n      '#495057',\r\n      '#343a40',\r\n      '#212529',\r\n    ],\r\n    cyan: [\r\n      '#e3fafc',\r\n      '#c5f6fa',\r\n      '#99e9f2',\r\n      '#66d9e8',\r\n      '#3bc9db',\r\n      '#22b8cf',\r\n      '#15aabf',\r\n      '#1098ad',\r\n      '#0c8599',\r\n      '#0b7285',\r\n    ],\r\n  };\r\n  \r\n  export default palette;","import  { useRef, useEffect } from 'react';\r\nimport Quill from 'quill';\r\nimport 'quill/dist/quill.snow.css';\r\nimport styled from 'styled-components';\r\nimport palette from '../../lib/styles/palette';\r\nimport Responsive from '../common/Responsive';\r\n\r\nconst EditorBlock = styled(Responsive)`\r\n  /* 페이지 위 아래 여백 지정 */\r\n  padding-top: 5rem;\r\n  padding-bottom: 5rem;\r\n`;\r\nconst TitleInput = styled.input`\r\n  font-size: 3rem;\r\n  outline: none;\r\n  padding-bottom: 0.5rem;\r\n  border: none;\r\n  border-bottom: 1px solid ${palette.gray[4]};\r\n  margin-bottom: 2rem;\r\n  width: 100%;\r\n`;\r\nconst QuillWrapper = styled.div`\r\n  /* 최소 크기 지정 및 padding 제거 */\r\n  .ql-editor {\r\n    padding: 0;\r\n    min-height: 320px;\r\n    font-size: 1.125rem;\r\n    line-height: 1.5;\r\n  }\r\n  .ql-editor.ql-blank::before {\r\n    left: 0px;\r\n  }\r\n`;\r\n\r\nconst Editor = ({ title, body, onChangeField }) => {\r\n  const quillElement = useRef(null); // Quill을 적용할 DivElement를 설정\r\n  const quillInstance = useRef(null); // Quill 인스턴스를 설정\r\n  \r\n\r\n  useEffect(() => {\r\n    quillInstance.current = new Quill(quillElement.current, {\r\n      theme: 'snow',\r\n      placeholder: '내용을 작성하세요...',\r\n      modules: {\r\n        // 더 많은 옵션\r\n        // https://quilljs.com/docs/modules/toolbar/ 참고\r\n        toolbar: [\r\n          [{ header: '1' }, { header: '2' }],\r\n          ['bold', 'italic', 'underline', 'strike'],\r\n          [{ list: 'ordered' }, { list: 'bullet' }],\r\n          ['blockquote', 'code-block', 'link', 'image'],\r\n        ],\r\n       \r\n      },\r\n    });\r\n\r\n    \r\n    // quill에 text-change 이벤트 핸들러 등록\r\n    // 참고: https://quilljs.com/docs/api/#events\r\n    const quill = quillInstance.current;\r\n    quill.on('text-change', (delta, oldDelta, source) => {\r\n      \r\n      if (source === 'user') {\r\n        onChangeField({ key: 'body', value: quill.root.innerHTML });\r\n      }\r\n    });\r\n    \r\n  }, [onChangeField]);\r\n\r\n  const mounted = useRef(false);\r\n  useEffect(() => {\r\n    if (mounted.current) return;\r\n    mounted.current = true;\r\n    quillInstance.current.root.innerHTML = body;\r\n  }, [body]);\r\n\r\n  const onChangeTitle = e => {\r\n    onChangeField({ key: 'title', value: e.target.value });\r\n    \r\n  };\r\n \r\n  return (\r\n    <EditorBlock>\r\n      <TitleInput\r\n        placeholder=\"제목을 입력하세요\"\r\n        onChange={onChangeTitle}\r\n        value={title}\r\n      />\r\n      <QuillWrapper>\r\n        <div ref={quillElement} />\r\n      </QuillWrapper>\r\n    </EditorBlock>\r\n  );\r\n};\r\n\r\nexport default Editor;","import { useEffect, useCallback } from \"react\";\r\nimport Editor from \"../../components/write/Editor\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { changeField, initialize } from \"../../modules/write\";\r\n\r\nconst EditorContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const { title, body } = useSelector(({ write }) => ({\r\n    title: write.title,\r\n    body: write.body,\r\n  }));\r\n  const onChangeField = useCallback(\r\n    (payload) => dispatch(changeField(payload)),\r\n    [dispatch]\r\n  );\r\n\r\n  // 언마운트될 때 초기화\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(initialize());\r\n    };\r\n  }, [dispatch]);\r\n  return <Editor onChangeField={onChangeField} title={title} body={body} />;\r\n};\r\nexport default EditorContainer;\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport palette from \"../../lib/styles/palette\";\r\n\r\nconst TagBoxBlock = styled.div`\r\n  width: 100%;\r\n  text-align: center;\r\n  align-items: center;\r\n  border-top: 1px solid ${palette.gray[2]};\r\n  padding-top: 2rem;\r\n\r\n  h4 {\r\n    color: ${palette.gray[8]};\r\n    margin-top: 0;\r\n    margin-bottom: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst TagForm = styled.form`\r\n  margin: auto;\r\n  border-radius: 4px;\r\n  overflow: hiddin;\r\n  display: flex;\r\n  width: 256px;\r\n  border: 1px solid ${palette.gray[9]}; /* 스타일 초기화 */\r\n  input,\r\n  button {\r\n    outline: none;\r\n    border: none;\r\n    font-size: 1rem;\r\n  }\r\n\r\n  input {\r\n    padding: 0.5rem;\r\n    flex: 1;\r\n  }\r\n  button {\r\n    cursor: pointer;\r\n    padding-right: 1rem;\r\n    padding-left: 1rem;\r\n    border: none;\r\n    background: ${palette.gray[8]};\r\n    color: white;\r\n    font-weight: bold;\r\n    &:hover {\r\n      background: ${palette.gray[6]};\r\n    }\r\n  }\r\n`;\r\nconst Tag = styled.div`\r\n\r\n  margin-right: 0.5rem;\r\n  color: ${palette.gray[6]};\r\n  cursor: pointer;\r\n  &hover {\r\n    opacity: 0.5;\r\n  }\r\n`;\r\n\r\nconst TagListBlock = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 0.5rem;\r\n`;\r\n\r\n//React.memo를 사용하여 tag값이 바뀔 때만 리렌더링되도록 처리\r\nconst TagItem = React.memo(({ tag, onRemove }) => (\r\n  <Tag onClick={() => onRemove(tag)}>#{tag}</Tag>\r\n));\r\n\r\n//React.memo를 사용하여 tags 값이 바뀔 때만 리렌더링되도록 처리\r\nconst TagList = React.memo(({ tags, onRemove }) => (\r\n  <TagListBlock>\r\n    {tags.map((tag) => (\r\n      <TagItem key={tag} tag={tag} onRemove={onRemove} />\r\n    ))}\r\n  </TagListBlock>\r\n));\r\n\r\nconst TagBox = ({ tags, onChangeTags }) => {\r\n  const [input, setInput] = useState(\"\");\r\n  const [localTags, setLocalTags] = useState([]);\r\n\r\n  const insertTag = useCallback(\r\n    (tag) => {\r\n      if (!tag) return; //공백이라면 추가하지 않음.. input에 아무것도 쓰지 않고 추가 누르면 추가가 안된다는 뜻.\r\n      if (localTags.includes(tag)) return; //이미 존재한다면 추가하지 않음\r\n      const nextTags = [...localTags, tag];\r\n      setLocalTags(nextTags);\r\n      onChangeTags(nextTags);\r\n    },\r\n    [localTags, onChangeTags]\r\n  );\r\n\r\n  const onRemove = useCallback(\r\n    (tag) => {\r\n      const nextTags = localTags.filter((t) => t !== tag);\r\n      setLocalTags(nextTags);\r\n      onChangeTags(nextTags);\r\n    },\r\n    [localTags, onChangeTags]\r\n  );\r\n\r\n  const onChange = useCallback((e) => {\r\n    setInput(e.target.value);\r\n  }, []);\r\n\r\n  const onSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      insertTag(input.trim()); //앞뒤 공백을 없앤 후 등록\r\n      setInput(\"\"); //input 초기화\r\n    },\r\n    [input, insertTag]\r\n  );\r\n\r\n  //tags 값이 바뀔 때\r\n  useEffect(() => {\r\n    setLocalTags(tags);\r\n  }, [tags]);\r\n\r\n  return (\r\n    <TagBoxBlock>\r\n      <h4>태그</h4>\r\n      <TagForm onSubmit={onSubmit}>\r\n        <input\r\n          placeholder=\"태그를 입력하세요\"\r\n          value={input}\r\n          onChange={onChange}\r\n        />\r\n        <button type=\"submit\">추가</button>\r\n      </TagForm>\r\n      <TagList tags={localTags} onRemove={onRemove} />\r\n    </TagBoxBlock>\r\n  );\r\n};\r\nexport default TagBox;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport TagBox from \"../../components/write/TagBox\";\r\nimport { changeField } from \"../../modules/write\";\r\n\r\nconst TagBoxContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const tags = useSelector((state) => state.write.tags);\r\n\r\n  const onChangeTags = (nextTags) => {\r\n    dispatch(\r\n      changeField({\r\n        key: \"tags\",\r\n        value: nextTags,\r\n      })\r\n    );\r\n  };\r\n\r\n  return <TagBox onChangeTags={onChangeTags} tags={tags} />;\r\n};\r\n\r\nexport default TagBoxContainer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"../common/Button\";\r\n\r\nconst WriteActionButtonBlock = styled.div`\r\n  margin-top: 1rem;\r\n  margin-bottom: 3rem;\r\n  margin-left : 45%;\r\n  button + button {\r\n    margin-left: 0.5rem;\r\n  }\r\n`;\r\n\r\n/* TagBox에서 사용하는 버튼과 일치하는 높이로 설정한 후 서로 간의 여백 지정 */\r\nconst StyledButton = styled(Button)`\r\n  height: 2.125rem;\r\n  & + & {\r\n    margin-left: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst WriteActionButtons = ({ onCancel, onPublish, isEdit }) => {\r\n    return (\r\n        <WriteActionButtonBlock>\r\n            <StyledButton cyan onClick={onPublish}>\r\n                 포스트 {isEdit ? '수정' : '등록'}\r\n            </StyledButton>\r\n           <StyledButton onClick={onCancel}>취소</StyledButton>\r\n        </WriteActionButtonBlock>\r\n    )\r\n}\r\n\r\nexport default WriteActionButtons;  ","import React, { useEffect } from \"react\";\r\nimport WriteActionButtons from \"../../components/write/WriteActionButtons\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { writePost, updatePost } from \"../../modules/write\";\r\n\r\nconst WriteActionButtonsContainer = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const { title, body, tags, post, postError, originalPostId } = useSelector(\r\n    ({ write }) => ({\r\n      title: write.title,\r\n      body: write.body,\r\n      tags: write.tags,\r\n      post: write.post,\r\n      postError: write.postError,\r\n      originalPostId: write.originalPostId,\r\n    })\r\n  );\r\n\r\n  // 포스트 등록\r\n  const onPublish = () => {\r\n    if (originalPostId) {\r\n      dispatch(updatePost({ title, body, tags, id: originalPostId }));\r\n      return;\r\n    }\r\n    dispatch(\r\n      writePost({\r\n        title,\r\n        body,\r\n        tags,\r\n      })\r\n    );\r\n  };\r\n\r\n  // 취소\r\n  const onCancel = () => {\r\n    navigate(-1);\r\n  };\r\n\r\n  // 성공 혹은 실패 시 할 작업\r\n  useEffect(() => {\r\n    if (post) {\r\n      const { _id, user } = post;\r\n      navigate(`/posts/@${user.username}/${_id}`);\r\n    }\r\n    if (postError) {\r\n      console.log(postError);\r\n    }\r\n  }, [navigate, post, postError]);\r\n  return (\r\n    <WriteActionButtons\r\n      onPublish={onPublish}\r\n      onCancel={onCancel}\r\n      isEit={originalPostId}\r\n    />\r\n  );\r\n};\r\n\r\nexport default WriteActionButtonsContainer;\r\n","import HeaderContainer from \"../containers/common/HeaderContainer\";\r\nimport EditorContainer from \"../containers/write/EditorContainer\";\r\nimport TagBoxContainer from \"../containers/write/TagBoxContainer\";\r\nimport WriteActionButtonsContainer from \"../containers/write/WriteActionButtonsContainer\";\r\n\r\nconst PostWrite = () => {\r\n  return (\r\n      <>\r\n        <HeaderContainer/>\r\n        <EditorContainer />\r\n        <TagBoxContainer />\r\n        <WriteActionButtonsContainer />\r\n      </>\r\n  );\r\n};\r\n\r\nexport default PostWrite;\r\n","import { css } from \"styled-components\";\r\n\r\nexport const mobile = (props) => {\r\n  return css`\r\n    @media only screen and (max-width: 767px) {\r\n      ${props}\r\n    }\r\n  `;\r\n};\r\n\r\nexport const tablet = (props) => {\r\n  return css`\r\n    @media only screen and (max-width: 1199px) {\r\n      ${props}\r\n    }\r\n  `;\r\n};\r\n\r\nexport const pc = (props) => {\r\n  return css`\r\n    @media only screen and (max-width: 1200px) {\r\n      ${props}\r\n    }\r\n  `;\r\n};\r\n"],"names":["buttonStyle","css","palette","props","fullWidth","cyan","StyledButton","styled","StyledLink","Link","to","ResponsiveBlock","children","rest","Container","mobile","flexwidth","height","Wrapper","Responsive","width","padding","Search","flex","LinkStyle","fontSize","MenuItem","marginLeft","Spacer","user","onChange","onLogout","query","SearchOutlined","style","TextField","size","variant","placeholder","value","className","_id","Input","Badge","overlap","badgeContent","color","ShoppingCartOutlined","onClick","alert","navigate","useNavigate","useSelector","cart","products","dispatch","useDispatch","logout","e","FilterlistProducts","target","gray","EditorBlock","TitleInput","QuillWrapper","title","body","onChangeField","quillElement","useRef","quillInstance","useEffect","current","Quill","theme","modules","toolbar","header","list","quill","on","delta","oldDelta","source","key","root","innerHTML","mounted","ref","write","useCallback","payload","changeField","initialize","TagBoxBlock","TagForm","Tag","TagListBlock","TagItem","React","tag","onRemove","TagList","tags","map","onChangeTags","useState","input","setInput","localTags","setLocalTags","insertTag","includes","nextTags","filter","t","onSubmit","preventDefault","trim","type","state","WriteActionButtonBlock","Button","onCancel","onPublish","isEdit","post","postError","originalPostId","username","console","log","updatePost","id","writePost","isEit","HeaderContainer","tablet"],"sourceRoot":""}