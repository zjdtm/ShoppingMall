{"version":3,"file":"static/js/453.159907f2.chunk.js","mappings":"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","sources":["components/common/Announcement.jsx","components/common/Button.jsx","components/common/Responsive.jsx","components/common/Header.jsx","containers/common/HeaderContainer.jsx","lib/styles/palette.jsx","components/common/SubInfo.jsx","components/common/Tags.jsx","components/post/PostViewer.jsx","components/common/AskModal.jsx","components/post/AskRemoveModal.jsx","components/post/PostActionButtons.jsx","containers/post/PostViewerContainer.jsx","pages/PostPage.jsx","responsive.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch } from \"../../../node_modules/react-redux/es/exports\";\r\nimport { logout } from \"../../modules/user\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 30px;\r\n  background-color: whitesmoke;\r\n  text-decoration: black;\r\n  color: white;\r\n  display: flex;\r\n  float: left;\r\n  position: fixed;\r\n  z-index: 11;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst LinkStyle = styled(Link)`\r\n    margin: 10px;\r\n    color : black;\r\n`;\r\n\r\nconst Announcement = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onLogout = async () => {\r\n    dispatch(logout());\r\n    alert(\"로그아웃 되었습니다.\");\r\n    window.location.reload();\r\n    window.location.href(\"/\");\r\n  };\r\n\r\n\r\n  return (\r\n    <Container>\r\n        {localStorage.getItem(\"user\") ? (\r\n          <>\r\n            <LinkStyle to=\"/\" onClick={onLogout}>로그아웃</LinkStyle>\r\n            <LinkStyle to=\"/posts\">게시판</LinkStyle>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <LinkStyle to=\"/login\">로그인</LinkStyle>\r\n            <LinkStyle to=\"/register\">회원가입</LinkStyle>\r\n            <LinkStyle to=\"/posts\">게시판</LinkStyle>\r\n          </> \r\n        )\r\n      }\r\n          \r\n          \r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Announcement;","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport palette from \"../../lib/styles/palette\";\r\n\r\nconst buttonStyle = css`\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  padding: 0.25rem 1rem;\r\n  color: white;\r\n  outline: none;\r\n  cursor: pointer;\r\n\r\n  background: ${palette.gray[8]};\r\n  &:hover {\r\n    background: ${palette.gray[6]};\r\n  }\r\n  ${(props) => props.fullWidth &&\r\n    css`\r\n      padding-top: 0.75rem;\r\n      padding-bottom: 0.75rem;\r\n      width: 100%;\r\n      font-size: 1.125rem;\r\n    `}\r\n  ${(props) =>\r\n    props.cyan &&\r\n    css`\r\n      background: ${palette.gray[5]};\r\n      &:hover {\r\n        background: ${palette.gray[4]};\r\n      }\r\n    `}\r\n    &:disabled {\r\n    background: ${palette.gray[3]};\r\n    color: ${palette.gray[5]};\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\nconst StyledButton = styled.button`\r\n  ${buttonStyle}\r\n`;\r\nconst StyledLink = styled(Link)`\r\n  ${buttonStyle}\r\n`;\r\nconst Button = (props) => {\r\n  return props.to ? (\r\n    <StyledLink {...props} cyan={props.cyan ? 1 : 0} />\r\n  ) : (\r\n    <StyledButton {...props} />\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ResponsiveBlock = styled.div`\r\npadding-left: 1rem;\r\npadding-right:1rem;\r\nwidth:1024px;\r\nmargin:0 auto; /*중앙 정렬*/\r\n\r\n/*브라우저 크기에 따라 가로 크기 변경*/\r\n@media (max-width:1024px) {\r\n    width:768px;\r\n}\r\n@media (max-width:768px) {\r\n    width:100%;\r\n}\r\n`;\r\n\r\nconst Responsive = ({ children, ...rest }) => {\r\n    // style, className, onClick, onMouseMove 등의 props를 사용할 수 있도록\r\n  // …rest를 사용하여 ResponsiveBlock에게 전달\r\n  return <ResponsiveBlock {...rest}>{children}</ResponsiveBlock>;\r\n};\r\n\r\nexport default Responsive;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Responsive from \"./Responsive\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Badge,TextField} from \"@material-ui/core\";\r\nimport { ShoppingCartOutlined, SearchOutlined, Input} from \"@material-ui/icons\";\r\nimport { mobile } from \"../../responsive\";\r\nimport { GiConverseShoe } from \"react-icons/gi\"\r\n\r\nconst Container = styled.div`\r\n  margin-top: 20px;\r\n  position: fixed;\r\n  z-index: 9;\r\n  width: 100%;\r\n  height: 8%;\r\n  background-color: white;\r\n  ${mobile({flexwidth : \"100%\", height: \"10%\" })}\r\n`;\r\n\r\n/**Responsive 컴포넌트의 속성에 스타일을 추가해서 새로운 컴포넌트 생성 */\r\nconst Wrapper = styled(Responsive)`\r\n  width: 90%;\r\n  padding: 10px 20px;\r\n  height: 4rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between; /*자식 엘리먼트 사이에 여백을 최대로 설정*/\r\n  .logo {\r\n    margin-right: 200px;\r\n    font-size: 1.5rem;\r\n    font-weight: 900;\r\n    letter-spacing: 2px;\r\n  }\r\n  .right {\r\n    font-size: 14px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  ${mobile({ width : \"100%\", padding: \"10px 0px\" })}\r\n`;\r\n\r\nconst Search = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  ${mobile({ flex:3, width : \"30%\"})}\r\n`;\r\n\r\nconst LinkStyle = styled(Link)`\r\n    margin: 10px;\r\n    color : black;\r\n    ${mobile({ fontSize : \"8px\" })}\r\n`;\r\n\r\n\r\nconst MenuItem = styled.div`\r\n  cursor: pointer;\r\n  ${mobile({ fontSize: \"12px\", marginLeft: \"10px\" })}\r\n`;\r\n\r\n/**\r\n * 헤더가 fixed로 되어 있기 때문에 페이지의 콘텐츠가 4rem 아래에 나타나도록 해 주는 컴포넌트\r\n */\r\nconst Spacer = styled.div`\r\n  height: 4rem;\r\n`;\r\n\r\nconst Header = ({ user, onLogout, onChange, query}) => {\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Wrapper>\r\n          <Search>\r\n            <SearchOutlined style={{fontSize:\"40px\"}}/>\r\n              <TextField style={{width : '250px', height:'30px'}} size=\"small\" variant=\"outlined\" placeholder=\"상품검색\"\r\n                onChange={onChange} value={query || ''}/>\r\n          </Search>\r\n          <LinkStyle to=\"/\" className=\"logo\">\r\n            <i>SHOES SHOP</i>\r\n          </LinkStyle>\r\n          {user ? (\r\n            <div className=\"right\">\r\n              <LinkStyle to=\"/products\"><GiConverseShoe size=\"25\"/></LinkStyle>\r\n              {user._id === '630a5bfd79ccbbb4d0844649' ? <LinkStyle to=\"/product/register\"><Input/></LinkStyle> : ''}\r\n              {/* <LinkStyle to=\"/\"><Person/></LinkStyle> */}\r\n              {/* <LinkStyle to=\"/\" onClick={onLogout}>로그아웃</LinkStyle> */}\r\n              <MenuItem>\r\n                <Link to=\"/cart\">\r\n                  <Badge overlap=\"rectangular\" badgeContent={0} color=\"primary\">\r\n                    <ShoppingCartOutlined />\r\n                  </Badge>\r\n                </Link>\r\n              </MenuItem>\r\n            </div>\r\n          ) : (\r\n            <div className=\"right\">\r\n              <LinkStyle to=\"/products\"><GiConverseShoe size=\"25\"/></LinkStyle>\r\n              <MenuItem>\r\n                <LinkStyle onClick={() => alert(\"로그인 한 유저만 사용가능합니다.\")} to=\"/login\">\r\n                  <Badge overlap=\"rectangular\" badgeContent={0} color=\"primary\">\r\n                    <ShoppingCartOutlined />\r\n                  </Badge>\r\n                </LinkStyle>\r\n              </MenuItem>\r\n            </div>\r\n          )}\r\n        </Wrapper>\r\n      </Container>\r\n      <Spacer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"../../../node_modules/react-router-dom/index\";\r\nimport Header from \"../../components/common/Header\";\r\nimport { FilterlistProducts } from \"../../modules/products\";\r\nimport { logout } from \"../../modules/user\";\r\n\r\nconst HeaderContainer = () => {\r\n  const navigate = useNavigate();\r\n  const { user, cart, query } = useSelector(({ user, cart, products }) => ({\r\n    user: user.user,\r\n    cart: cart.cart,\r\n    query: products.query,\r\n  }));\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onLogout = async () => {\r\n    dispatch(logout());\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    dispatch(FilterlistProducts(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <Header\r\n      user={user}\r\n      cart={cart}\r\n      onLogout={onLogout}\r\n      onChange={onChange}\r\n      query={query}\r\n    />\r\n  );\r\n};\r\n\r\nexport default HeaderContainer;\r\n","// source: https://yeun.github.io/open-color/\r\n\r\nconst palette = {\r\n    gray: [\r\n      '#f8f9fa',\r\n      '#f1f3f5',\r\n      '#e9ecef',\r\n      '#dee2e6',\r\n      '#ced4da',\r\n      '#adb5bd',\r\n      '#868e96',\r\n      '#495057',\r\n      '#343a40',\r\n      '#212529',\r\n    ],\r\n    cyan: [\r\n      '#e3fafc',\r\n      '#c5f6fa',\r\n      '#99e9f2',\r\n      '#66d9e8',\r\n      '#3bc9db',\r\n      '#22b8cf',\r\n      '#15aabf',\r\n      '#1098ad',\r\n      '#0c8599',\r\n      '#0b7285',\r\n    ],\r\n  };\r\n  \r\n  export default palette;","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport palette from '../../lib/styles/palette';\r\n\r\nconst SubInfoBlock = styled.div`\r\n${props =>\r\n    props.hasMarginTop &&\r\n    css`\r\n      margin-top: 1rem;\r\n    `}\r\n  color: ${palette.gray[6]};\r\n  /* span 사이에 가운뎃점 문자 보여주기*/\r\n  span + span:before {\r\n    color: ${palette.gray[4]};\r\n    padding-left: 0.25rem;\r\n    padding-right: 0.25rem;\r\n    content: '\\\\B7'; /* 가운뎃점 문자 */\r\n  }\r\n`;\r\n\r\nconst SubInfo = ({ username, publishedDate, hasMarginTop }) => {\r\n    return (\r\n      <SubInfoBlock hasMarginTop={hasMarginTop}>\r\n        <span>\r\n          <b>\r\n            <Link to={`/posts/@${username}`}>{username}</Link>\r\n          </b>\r\n        </span>\r\n        <span>{new Date(publishedDate).toLocaleDateString()}</span>\r\n      </SubInfoBlock>\r\n    );\r\n  };\r\n  \r\n  export default SubInfo;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport palette from \"../../lib/styles/palette\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst TagsBlock = styled.div`\r\n  margin-top: 0.5rem;\r\n  .tag {\r\n    display: inline-block;\r\n    color: ${palette.cyan[7]};\r\n    text-decoration: none;\r\n    margin-right: 0.5rem;\r\n    &:hover {\r\n        color: ${palette.cyan[6]};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Tags = ({ tags }) => {\r\n    return (\r\n        <TagsBlock>\r\n           {tags.map(tag => (\r\n             <Link className=\"tag\" to={`/posts/?tag=${tag}`} key={tag}>#{tag}</Link>\r\n           ))}\r\n        </TagsBlock>\r\n    );\r\n};\r\n\r\nexport default Tags;","import styled from \"styled-components\";\r\nimport palette from \"../../lib/styles/palette\";\r\nimport Responsive from \"../common/Responsive\";\r\nimport SubInfo from \"../common/SubInfo\";\r\nimport Tags from \"../common/Tags\";\r\n\r\nconst PostViewerBlock = styled(Responsive)`\r\n  margin-top: 4rem;\r\n`;\r\n\r\nconst PostHead = styled.div`\r\n  border-bottom: 1px solid ${palette.gray[2]};\r\n  padding-bottom: 3rem;\r\n  margin-bottom: 3rem;\r\n  h1 {\r\n    font-size: 3rem;\r\n    line-height: 1.5;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nconst PostContent = styled.div`\r\n  font-size: 1.3125rem;\r\n  color: ${palette.gray[8]};\r\n`;\r\n\r\nconst PostViewer = ({ post, error, loading, actionButtons }) => {\r\n  //에러 발생 시\r\n  if (error) {\r\n    if (error.response && error.response.status === 404) {\r\n      return <PostViewerBlock>존재하지 않는 포스트입니다.</PostViewerBlock>;\r\n    }\r\n    return <PostViewerBlock>오류 발생!</PostViewerBlock>;\r\n  }\r\n\r\n  //로딩 중이거나 아직 포스트 데이터가 없을 때\r\n  if (loading || !post) {\r\n    return null;\r\n  }\r\n  const { title, body, user, publishedDate, tags } = post;\r\n  return (\r\n    <PostViewerBlock>\r\n      <PostHead>\r\n        <h1>{title}</h1>\r\n        <SubInfo\r\n          username={user.username}\r\n          publishedDate={publishedDate}\r\n          hasMarginTop\r\n        />\r\n        <Tags tags={tags} />\r\n      </PostHead>\r\n      {actionButtons}\r\n      <PostContent dangerouslySetInnerHTML={{ __html: body }} />\r\n    </PostViewerBlock>\r\n  );\r\n};\r\n\r\nexport default PostViewer;\r\n","import styled from 'styled-components';\r\nimport Button from './Button';\r\n\r\nconst Fullscreen = styled.div`\r\n   position: fixed;\r\n   z-index: 30;\r\n   top: 0;\r\n   left: 0;\r\n   width: 100%;\r\n   height: 100%;\r\n   background: rgba(0, 0, 0, 0.25);\r\n   display: flex;\r\n   justify-content: center;\r\n   align-items: center;\r\n`;\r\n\r\nconst AskModalBlock = styled.div`\r\n  width: 320px;\r\n  background: white;\r\n  padding: 1.5rem;\r\n  border-radius:4px;\r\n  box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.125);\r\n  h2 {\r\n    margin-top: 0;\r\n    margin-bottom: 1rem;\r\n  }\r\n  p {\r\n    margin-bottom: 3rem;\r\n  }\r\n  .bottons {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n   height: 2rem;\r\n   & + & {\r\n    margin-left: 0.75rem;\r\n   }\r\n`;\r\n\r\nconst AskModal = ({\r\n    visible,\r\n    title,\r\n    description,\r\n    confirmText = '확인',\r\n    cancelText = '취소',\r\n    onConfirm,\r\n    onCancel,\r\n}) => {\r\n    if(!visible) return null;\r\n    return (\r\n        <Fullscreen>\r\n            <AskModalBlock>\r\n                <h2>{title}</h2>\r\n                <p>{description}</p>\r\n                <div className='buttons'>\r\n                    <StyledButton onClick={onCancel}>{cancelText}</StyledButton>\r\n                    <StyledButton cyan onClick={onConfirm}>\r\n                        {confirmText}\r\n                    </StyledButton>\r\n                </div>\r\n            </AskModalBlock>\r\n        </Fullscreen>\r\n    )\r\n}\r\n\r\nexport default AskModal;","import AskModal from \"../common/AskModal\";\r\n\r\nconst AskRemoveModal = ({ visible, onConfirm, onCancel }) => {\r\n    return (\r\n        <AskModal\r\n        visible={visible}\r\n        title='포스트 삭제'\r\n        description='포스트를 정말 삭제하시겠습니까?'\r\n        confirmText=\"삭제\"\r\n        onConfirm={onConfirm}\r\n        onCancel={onCancel}\r\n        />\r\n    );\r\n};\r\n\r\nexport default AskRemoveModal;","import { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport palette from '../../lib/styles/palette';\r\nimport AskRemoveModal from './AskRemoveModal';\r\n\r\nconst PostActionButtonsBlock = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-bottom: 2rem;\r\n  margin-top: -1.5rem;\r\n`;\r\n\r\nconst ActionButton = styled.button`\r\n  padding: 0.25rem 0.5rem;\r\n  border-radius: 4px;\r\n  color: ${palette.gray[6]};\r\n  font-weight: bold;\r\n  border: none;\r\n  outline: none;\r\n  font-size: 0.875rem;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background: ${palette.gray[1]};\r\n    color: ${palette.cyan[7]};\r\n  }\r\n  & + & {\r\n    margin-left: 0.25rem;\r\n  }\r\n`;\r\n\r\nconst PostActionButtons = ({ onEdit, onRemove }) => {\r\n  const [modal, setModal] = useState(false);\r\n  const onRemoveClick = () => {\r\n    setModal(true);\r\n  };\r\n  const onCancel = () => {\r\n    setModal(false);\r\n  };\r\n  const onConfirm = () => {\r\n    setModal(false);\r\n    onRemove();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <PostActionButtonsBlock>\r\n        <ActionButton onClick={onEdit}>수정</ActionButton>\r\n        <ActionButton onClick={onRemoveClick}>삭제</ActionButton>\r\n      </PostActionButtonsBlock>\r\n      <AskRemoveModal\r\n        visible={modal}\r\n        onConfirm={onConfirm}\r\n        onCancel={onCancel}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostActionButtons;","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { readPost, unloadPost } from \"../../modules/post\";\r\nimport PostViewer from \"../../components/post/PostViewer\";\r\nimport PostActionButtons from \"../../components/post/PostActionButtons\";\r\nimport { setOriginalPost } from \"../../modules/write\";\r\nimport { removePost } from \"../../lib/api/posts\";\r\n\r\nconst PostViewerContainer = () => {\r\n  //처음 마운트될 때 포스트 읽기 API 요청\r\n  const { postId } = useParams();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const { post, error, loading, user } = useSelector(\r\n    ({ post, loading, user }) => ({\r\n      post: post.post,\r\n      error: post.error,\r\n      loading: loading[\"post/READ_POST\"],\r\n      user: user.user,\r\n    })\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(readPost(postId));\r\n    //언마운트될 때 리덕스에서 포스트 데이터 없애기\r\n    return () => {\r\n      dispatch(unloadPost());\r\n    };\r\n  }, [dispatch, postId]);\r\n\r\n  const onEdit = () => {\r\n    dispatch(setOriginalPost(post));\r\n    navigate(\"/posts/write\");\r\n  };\r\n\r\n  const onRemove = async () => {\r\n    try {\r\n      await removePost(postId);\r\n      navigate(\"/posts\"); //홈으로 이동\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  const ownPost = (user && user._id) === (post && post.user._id);\r\n  return (\r\n    <PostViewer\r\n      post={post}\r\n      loading={loading}\r\n      error={error}\r\n      actionButtons={\r\n        ownPost && <PostActionButtons onEdit={onEdit} onRemove={onRemove} />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PostViewerContainer;\r\n","import Announcement from \"../components/common/Announcement\";\r\nimport HeaderContainer from \"../containers/common/HeaderContainer\";\r\nimport PostViewerContainer from \"../containers/post/PostViewerContainer\";\r\n\r\nconst PostPage = () => {\r\n    return(\r\n        <>\r\n         <Announcement/>\r\n         <HeaderContainer/>\r\n         <PostViewerContainer/>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default PostPage;","import { css } from \"styled-components\";\r\n\r\nexport const mobile = (props) => {\r\n  return css`\r\n    @media only screen and (max-width: 767px) {\r\n      ${props}\r\n    }\r\n  `;\r\n};\r\n\r\nexport const tablet = (props) => {\r\n  return css`\r\n    @media only screen and (max-width: 1199px) {\r\n      ${props}\r\n    }\r\n  `;\r\n};\r\n\r\nexport const pc = (props) => {\r\n  return css`\r\n    @media only screen and (max-width: 1200px) {\r\n      ${props}\r\n    }\r\n  `;\r\n};\r\n"],"names":["Container","styled","LinkStyle","Link","dispatch","useDispatch","onLogout","logout","alert","window","location","reload","href","localStorage","getItem","to","onClick","buttonStyle","css","palette","props","fullWidth","cyan","StyledButton","StyledLink","ResponsiveBlock","children","rest","mobile","flexwidth","height","Wrapper","Responsive","width","padding","Search","flex","fontSize","MenuItem","marginLeft","Spacer","user","onChange","query","SearchOutlined","style","TextField","size","variant","placeholder","value","className","_id","Input","Badge","overlap","badgeContent","color","ShoppingCartOutlined","navigate","useNavigate","useSelector","cart","products","e","FilterlistProducts","target","gray","SubInfoBlock","hasMarginTop","username","publishedDate","Date","toLocaleDateString","TagsBlock","tags","map","tag","PostViewerBlock","PostHead","PostContent","post","error","loading","actionButtons","response","status","title","body","dangerouslySetInnerHTML","__html","Fullscreen","AskModalBlock","Button","visible","description","confirmText","cancelText","onConfirm","onCancel","PostActionButtonsBlock","ActionButton","onEdit","onRemove","useState","modal","setModal","postId","useParams","useEffect","readPost","unloadPost","removePost","console","log","ownPost","setOriginalPost","Announcement","HeaderContainer","tablet"],"sourceRoot":""}